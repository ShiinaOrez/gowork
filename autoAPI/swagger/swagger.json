{
    "swagger": "2.0",
    "info": {
        "title": "Elite API",
        "description": "Elite is a application which due to deal with the relationship between enterprises and students",
        "version": "0.0.1",
        "termsOfService": "http://www.muxixyz.com",
        "contact": {
            "email": "Shiinaorez@gmail.com"
        }
    },
    "basePath": "/api/v1.0",
    "paths": {
        "/auth/company/signin": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Company login.",
                "operationId": "AuthController.CompanySignIn",
                "parameters": [
                    {
                        "in": "body",
                        "name": "account",
                        "description": "The company account telephone or email",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "code",
                        "description": "The confirm code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "loginType",
                        "description": "The type to login: tel or email",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ResultOfCompanyLogin"
                        }
                    },
                    "401": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CompanyLoginError"
                        }
                    }
                }
            }
        },
        "/auth/company/signup": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "New company must sign up.",
                "operationId": "AuthController.CompanySignUp",
                "parameters": [
                    {
                        "in": "body",
                        "name": "companyName",
                        "description": "The company name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "password",
                        "description": "The password of account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "emailAddress",
                        "description": "The email address of company account",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "confirmCode",
                        "description": "The confirm code we send to email",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ResultOfCompanySignUp"
                        }
                    },
                    "401": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.SignUpError"
                        }
                    }
                }
            }
        },
        "/auth/company/{Cid}/confirmInfo": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Company account must be comfirmed",
                "operationId": "AuthController.CompanyInformationConfirm",
                "parameters": [
                    {
                        "in": "body",
                        "name": "companyName",
                        "description": "The company name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "licenseImage",
                        "description": "The company license image",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "organizationCode",
                        "description": "The company organization code",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "originImage",
                        "description": "The company organization origin image",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "legalIdentify",
                        "description": "The company legal's identify",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "cardImage",
                        "description": "The company legal ID card image",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "legalName",
                        "description": "The legal body name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "legalNumber",
                        "description": "The legal body number",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Cid",
                        "description": "The company ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} post information successful"
                    },
                    "401": {
                        "description": "{object| models.PostConfirmInformationError"
                    }
                }
            }
        },
        "/auth/company/{Cid}/info": {
            "put": {
                "tags": [
                    "auth"
                ],
                "description": "Confirm request will be posted to reviewer.",
                "operationId": "AuthController.StartConfirmCompanyInformation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Cid",
                        "description": "The company ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} confirm request post successful"
                    },
                    "401": {
                        "description": "{string} confirm request post failed"
                    }
                }
            },
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Post the company base information.",
                "operationId": "AuthController.CompanyInformationPost",
                "parameters": [
                    {
                        "in": "body",
                        "name": "companyNature",
                        "description": "The company nature",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "contactName",
                        "description": "The contact person name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "contactTel",
                        "description": "The contact person telephone number",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "licenseLocation",
                        "description": "The company license location",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "initTags",
                        "description": "The company init tags(max = 6)",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CompanyInitTags"
                        }
                    },
                    {
                        "in": "path",
                        "name": "Cid",
                        "description": "The company ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} company information post successful"
                    },
                    "401": {
                        "description": "{string} company information post failed"
                    }
                }
            }
        },
        "/auth/email/confirm": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Get email confirm code.",
                "operationId": "AuthController.GetEmailConfirmCode",
                "parameters": [
                    {
                        "in": "body",
                        "name": "email",
                        "description": "The telephone number ready for confirm",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} send code successful"
                    },
                    "410": {
                        "description": "{string} please wait for minute"
                    }
                }
            }
        },
        "/auth/reviewer/signin": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Reviewer login",
                "operationId": "AuthController.ReviewerSignIn",
                "parameters": [
                    {
                        "in": "body",
                        "name": "name",
                        "description": "The reviewer name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "password",
                        "description": "The confirm code",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ResultOfReviewerLogin"
                        }
                    },
                    "401": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ReviewerLoginError"
                        }
                    }
                }
            }
        },
        "/auth/reviewer/signup": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "New reviewer must sign up.",
                "operationId": "AuthController.ReviewerSignUp",
                "parameters": [
                    {
                        "in": "body",
                        "name": "name",
                        "description": "The reviewer name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "password",
                        "description": "The reviewer account password",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "intro",
                        "description": "The reviewer introduction",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ResultOfReviewerSignUp"
                        }
                    },
                    "401": {
                        "description": "{string} sign up failed"
                    }
                }
            }
        },
        "/auth/telephone/confirm": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Get telephone confirm code",
                "operationId": "AuthController.GetTelephoneConfirmCode",
                "parameters": [
                    {
                        "in": "body",
                        "name": "tel",
                        "description": "The telephone number ready for confirm",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} send code successful"
                    },
                    "410": {
                        "description": "{string} please wait for minute"
                    }
                }
            }
        },
        "/auth/user/signin": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "Account sign in.",
                "operationId": "AuthController.UserSignIn",
                "parameters": [
                    {
                        "in": "body",
                        "name": "email",
                        "description": "The email for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "tel",
                        "description": "The telephone number of login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "password",
                        "description": "The password for login",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "loginType",
                        "description": "The login type is email or telephone",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} login success"
                    },
                    "401": {
                        "description": "{string}"
                    }
                }
            }
        },
        "/auth/user/signup": {
            "post": {
                "tags": [
                    "auth"
                ],
                "description": "New user must sign up.",
                "operationId": "AuthController.UserSignUp",
                "parameters": [
                    {
                        "in": "body",
                        "name": "realName",
                        "description": "The real name of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "sex",
                        "description": "The sex of user",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "birthYear",
                        "description": "The birth year of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "birthMonth",
                        "description": "The birth month of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "city",
                        "description": "The city of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "university",
                        "description": "The university of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "enrollYear",
                        "description": "The enroll year of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "graduateYear",
                        "description": "The graduate year of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "educationLevel",
                        "description": "The education level of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "major",
                        "description": "The major of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "status",
                        "description": "The status of user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "initTags",
                        "description": "The initialize tags of user",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AuthInitTags"
                        }
                    },
                    {
                        "in": "body",
                        "name": "intro",
                        "description": "The introduction of user",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ResultOfUserLogin"
                        }
                    },
                    "401": {
                        "description": "{string} sign up failed"
                    }
                }
            }
        },
        "/company/attention": {
            "post": {
                "tags": [
                    "company"
                ],
                "description": "Pay attention to a elite.",
                "operationId": "CompanyController.CompanyPayAttentionToSomebody",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "EliteID",
                        "description": "The elite ID for attention",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} pay attention successful!"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company | elite not existed"
                    },
                    "407": {
                        "description": "{string} already pay attention to it"
                    }
                }
            }
        },
        "/company/attention/list": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "Get company's attention elites list",
                "operationId": "CompanyController.GetCompanyAttentionList",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.ElitesList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/company/attention/{Uid}": {
            "put": {
                "tags": [
                    "company"
                ],
                "description": "Cancel to pay attention to a elite",
                "operationId": "CompanyController.CompanyCancelAttentionSomebody",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "UiD",
                        "description": "The elite ID for attention",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} cancel successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company | user not existed"
                    },
                    "407": {
                        "description": "{string} never pay attention to it"
                    }
                }
            }
        },
        "/company/category": {
            "post": {
                "tags": [
                    "company"
                ],
                "description": "Create a category for company.",
                "operationId": "CompanyController.CreateAndPostCompanyCategory",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Name",
                        "description": "The new category name",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} category ID"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    },
                    "407": {
                        "description": "{string} already exist a same category"
                    }
                }
            }
        },
        "/company/category/{CateID}/tags": {
            "post": {
                "tags": [
                    "company"
                ],
                "description": "Create a tag and join it to category",
                "operationId": "CompanyController.AddTagToCompanyCategory",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "CateID",
                        "description": "The category ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "TagName",
                        "description": "The new tag name",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} create successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company | category not existed"
                    }
                }
            }
        },
        "/company/email": {
            "put": {
                "tags": [
                    "company"
                ],
                "description": "update company email",
                "operationId": "CompanyController.UpdateCompanyEmailAddress",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Email",
                        "description": "The email address to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} update successful"
                    },
                    "401": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/company/info": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "Get company base information.",
                "operationId": "CompanyController.CompanyBaseInformationByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CompanyBaseInformation"
                        }
                    },
                    "401": {
                        "description": "{string} company not existed"
                    }
                }
            },
            "put": {
                "tags": [
                    "company"
                ],
                "description": "Edit company information",
                "operationId": "CompanyController.EditCompanyInformation",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} models.CompanyInformation"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    },
                    "406": {
                        "description": "{string} image error"
                    }
                }
            }
        },
        "/company/logo": {
            "put": {
                "tags": [
                    "company"
                ],
                "description": "Update company logo.",
                "operationId": "CompanyController.UpdateCompanyLogo",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Logo",
                        "description": "The company new logo.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} new logo URL"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/company/missionList": {
            "post": {
                "tags": [
                    "company"
                ],
                "description": "Create and post a missionList.",
                "operationId": "CompanyController.CreateAndPostMissionList",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Payload",
                        "description": "models.MissionListCreateInformation",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} missionList ID"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/company/position": {
            "post": {
                "tags": [
                    "company"
                ],
                "description": "Company create a position.",
                "operationId": "CompanyController.CreateAndPostPosition",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Payload",
                        "description": "models.PositionPayload",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} positionID"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/company/position/{Pid}": {
            "put": {
                "tags": [
                    "company"
                ],
                "description": "Edit the position information",
                "operationId": "CompanyController.EditCompanyPositionByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Payload",
                        "description": "models.PositionPayload",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} edit successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company | position not existed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "company"
                ],
                "description": "Delete position by ID",
                "operationId": "CompanyController.DeleteCompanyPositionByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company | position not existed"
                    }
                }
            }
        },
        "/company/position/{Pid}/search": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "Search company positions.",
                "operationId": "CompanyController.SearchCompanyPositionByNormalWay",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Pattern",
                        "description": "The pattern string",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.Positions"
                        }
                    },
                    "401": {
                        "description": "{string} sign up failed"
                    },
                    "402": {
                        "description": "{string} user | position not existed"
                    }
                }
            }
        },
        "/company/search/fast": {
            "post": {
                "tags": [
                    "company"
                ],
                "description": "Search company by very fast way",
                "operationId": "CompanyController.CompanySearchByFastWay",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Pattern",
                        "description": "The pattern to make a fast search",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CompanyVerySimpleInfoList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/company/search/intelligent": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "Search company by intelligent way.",
                "operationId": "CompanyController.CompanySearchByIntelligent",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CompanySearchList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/company/tel": {
            "put": {
                "tags": [
                    "company"
                ],
                "description": "update the company telephone number.",
                "operationId": "CompanyController.UpdateCompanyTelephone",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Tel",
                        "description": "The telephone number to update",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} update successful"
                    },
                    "401": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/company/{Cid}/info": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "Get company information by id. (information less)",
                "operationId": "CompanyController.CompanyInformationByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Cid",
                        "description": "The company ID for get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CompanyInformation"
                        }
                    },
                    "401": {
                        "description": "{string} user | company not existed"
                    }
                }
            }
        },
        "/company/{Cid}/mission/list": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "Get a company mission list by company ID.",
                "operationId": "CompanyController.GetCompanyMissionListByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Cid",
                        "description": "The company ID for get mission list",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MissionList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/company/{Cid}/missionList/all": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "Get a company all mission list.",
                "operationId": "CompanyController.GetAllMissionListForCompany",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MissionListList"
                        }
                    },
                    "401": {
                        "description": "{string} sign up failed"
                    },
                    "402": {
                        "description": "{string} user | company not existed"
                    }
                }
            }
        },
        "/company/{Cid}/position/list": {
            "get": {
                "tags": [
                    "company"
                ],
                "description": "Get a company's position list",
                "operationId": "CompanyController.GetCompanyPositionListByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Cid",
                        "description": "The company ID for get position list",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PositionsList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/elite/industry/list": {
            "post": {
                "tags": [
                    "elite"
                ],
                "description": "Search elite by intelligent way.",
                "operationId": "EliteController.SearchEliteByIntelligentWay",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Payload",
                        "description": "Search payload",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/object"
                        },
                        "default": "models.SearchPayload"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EliteList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/elite/search": {
            "post": {
                "tags": [
                    "elite"
                ],
                "description": "Search elite by normal way.",
                "operationId": "EliteController.SearchElite",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Payload",
                        "description": "models.SearchPayload",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EliteList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/message/company/list": {
            "get": {
                "tags": [
                    "message"
                ],
                "description": "Get message not from platform, might from another company or a user",
                "operationId": "MessageController.CompanyMessageList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CompanyMessageList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/message/feedback/list": {
            "get": {
                "tags": [
                    "message"
                ],
                "description": "Get feedback message list.",
                "operationId": "MessageController.FeedbackMessageList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.FeedbackMessageList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/message/platform/list": {
            "get": {
                "tags": [
                    "message"
                ],
                "description": "Get platform message list.",
                "operationId": "MessageController.PlatformMessageList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.PlatformMessageList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | company not existed"
                    }
                }
            }
        },
        "/message/{MsgID}": {
            "get": {
                "tags": [
                    "message"
                ],
                "description": "Get the message information",
                "operationId": "MessageController.GetMessageInformationByID",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MessageEntity"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | message not existed"
                    }
                }
            },
            "put": {
                "tags": [
                    "message"
                ],
                "description": "Read a message, but it might be done by backend.",
                "operationId": "MessageController.ReadMessage",
                "responses": {
                    "200": {
                        "description": "{string} ok"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | message not existed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "message"
                ],
                "description": "Delete a message.",
                "operationId": "MessageController.DeleteMessage",
                "responses": {
                    "200": {
                        "description": "{string} delete successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | message not existed"
                    }
                }
            }
        },
        "/mission/": {
            "post": {
                "tags": [
                    "mission"
                ],
                "description": "Create a mission and post it.",
                "operationId": "MissionController.CreateAndPostMission",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Payload",
                        "description": "models.CreateMissionPayload",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} MissionID"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} company not existed"
                    }
                }
            }
        },
        "/mission/file/upload": {
            "post": {
                "tags": [
                    "mission"
                ],
                "description": "Upload the file.",
                "operationId": "MissionController.UploadFileOnlyZip",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "File",
                        "description": "The file you want to upload",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} File URL"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | mission not existed"
                    },
                    "406": {
                        "description": "{string} File error"
                    }
                }
            }
        },
        "/mission/search": {
            "post": {
                "tags": [
                    "mission"
                ],
                "description": "Search mission.",
                "operationId": "MissionController.SearchForMission",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Payload",
                        "description": "models.SearchPayload",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MissionList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/mission/tag/list": {
            "get": {
                "tags": [
                    "mission"
                ],
                "description": "Get the mission tags list.",
                "operationId": "MissionController.GetStaticMissionTagList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TagList"
                        }
                    },
                    "407": {
                        "description": "{string} something wrong"
                    }
                }
            }
        },
        "/mission/{Mid}": {
            "put": {
                "tags": [
                    "mission"
                ],
                "description": "Company modify mission information.",
                "operationId": "MissionController.ModifyMissionByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Mid",
                        "description": "The mission id to modify",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "Payload",
                        "description": "models.CreateMissionPayload",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} modify successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} mission not existed"
                    }
                }
            },
            "post": {
                "tags": [
                    "mission"
                ],
                "description": "Submit the works for mission",
                "operationId": "MissionController.SubmitMissionByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Mid",
                        "description": "The mission id to submit",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "body",
                        "name": "Payload",
                        "description": "models.SubmitMissionPayload",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} submit successfully!"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | mission not existed"
                    },
                    "406": {
                        "description": "{string} File error"
                    },
                    "407": {
                        "description": "{string} submit failed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "mission"
                ],
                "description": "Delete a mission by ID.",
                "operationId": "MissionController.DeleteMissionByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Mid",
                        "description": "The mission id to delete",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} mission not existed"
                    }
                }
            }
        },
        "/mission/{Mid}/feedback": {
            "get": {
                "tags": [
                    "mission"
                ],
                "description": "Get the mission feedback.",
                "operationId": "MissionController.GetMissionFeedback",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Mid",
                        "description": "The mission id to give up",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.CompanyFeedback"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | mission not existed"
                    }
                }
            }
        },
        "/mission/{Mid}/info": {
            "get": {
                "tags": [
                    "mission"
                ],
                "description": "Mission information.",
                "operationId": "MissionController.MissionInformationByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Mid",
                        "description": "The mission id to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MissionInformation"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | mission not existed"
                    }
                }
            }
        },
        "/mission/{Mid}/statistics": {
            "get": {
                "tags": [
                    "mission"
                ],
                "description": "New user must sign up.",
                "operationId": "MissionController.MissionStatisticsByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Mid",
                        "description": "The mission id to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MissionStatistics"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} mission not existed"
                    }
                }
            }
        },
        "/mission/{Mid}/status": {
            "get": {
                "tags": [
                    "mission"
                ],
                "description": "Get the status between user and mission.",
                "operationId": "MissionController.GetMissionStatusByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Mid",
                        "description": "The mission id to Gain",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} 1 for gained, 0 for not"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | mission not existed"
                    }
                }
            }
        },
        "/missionList/attention/list": {
            "get": {
                "tags": [
                    "missionList"
                ],
                "description": "Get a user's attention missionList.",
                "operationId": "MissionListController.GetMissionListAttentionList",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MissionListList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/missionList/attention/{MlID}": {
            "put": {
                "tags": [
                    "missionList"
                ],
                "description": "Cancel attention.",
                "operationId": "MissionListController.CancelMissionListAttention",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "MlID",
                        "description": "The missionList ID to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} sign up successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} missionList not existed"
                    },
                    "407": {
                        "description": "{string} haven't pay attention"
                    }
                }
            },
            "post": {
                "tags": [
                    "missionList"
                ],
                "description": "User pay attention to a mission list.",
                "operationId": "MissionListController.PayAttentionToMissionList",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "MlID",
                        "description": "The missionList ID to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} missionList not existed"
                    },
                    "407": {
                        "description": "{string} already pay attention"
                    }
                }
            }
        },
        "/missionList/attention/{MlID}/status": {
            "get": {
                "tags": [
                    "missionList"
                ],
                "description": "Get a user pay attention to a missionList or not.",
                "operationId": "MissionListController.GetUserToMissionListStatusByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "MlID",
                        "description": "The missionList ID to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int} the status"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} missionList not existed"
                    }
                }
            }
        },
        "/missionList/{MlID}": {
            "get": {
                "tags": [
                    "missionList"
                ],
                "description": "Get missionList information by ID.",
                "operationId": "MissionListController.GetMissionListInformationByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "MlID",
                        "description": "The missionList ID to get information",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.MissionListInformation"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} missionList not existed"
                    }
                }
            },
            "delete": {
                "tags": [
                    "missionList"
                ],
                "description": "Delete a missionList by ID.",
                "operationId": "MissionListController.DeleteMissionListByID",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "MlID",
                        "description": "The missionList ID to delete it",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} delete successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} missionList not existed"
                    },
                    "407": {
                        "description": "{string} delete failed"
                    }
                }
            }
        },
        "/missionList/{MlID}/getElite": {
            "get": {
                "tags": [
                    "missionList"
                ],
                "description": "New user must sign up.",
                "operationId": "MissionListController.MissionListGetElite",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "MlID",
                        "description": "The missionList ID to get",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.EliteList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} mission list  not existed"
                    }
                }
            }
        },
        "/tag/ability/list": {
            "get": {
                "tags": [
                    "tag"
                ],
                "description": "Get ability tags list.",
                "operationId": "TagController.TagAbilityList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TagList"
                        }
                    },
                    "201": {
                        "description": "{string} none tag exist"
                    }
                }
            }
        },
        "/tag/address/list": {
            "get": {
                "tags": [
                    "tag"
                ],
                "description": "Get address tags list.",
                "operationId": "TagController.TagAddressList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TagList"
                        }
                    },
                    "201": {
                        "description": "{string} none tag exist"
                    }
                }
            }
        },
        "/tag/character/list": {
            "get": {
                "tags": [
                    "tag"
                ],
                "description": "Get character tags list.",
                "operationId": "TagController.TagCharacterList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TagList"
                        }
                    },
                    "201": {
                        "description": "{string} none tag exist"
                    }
                }
            }
        },
        "/tag/grade/list": {
            "get": {
                "tags": [
                    "tag"
                ],
                "description": "Get grade tags list.",
                "operationId": "TagController.TagGradeList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TagList"
                        }
                    },
                    "201": {
                        "description": "{string} none tag exist"
                    }
                }
            }
        },
        "/tag/industry/list": {
            "get": {
                "tags": [
                    "tag"
                ],
                "description": "Get industry tag list.",
                "operationId": "TagController.TagIndustryList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TagList"
                        }
                    },
                    "201": {
                        "description": "{string} none tag exist"
                    }
                }
            }
        },
        "/tag/position/list": {
            "get": {
                "tags": [
                    "tag"
                ],
                "description": "Get position tag list.",
                "operationId": "TagController.TagPositionList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TagList"
                        }
                    },
                    "201": {
                        "description": "tag exist",
                        "schema": {
                            "$ref": "#/definitions/none"
                        }
                    }
                }
            }
        },
        "/tag/university/list": {
            "get": {
                "tags": [
                    "tag"
                ],
                "description": "Get university tags list.",
                "operationId": "TagController.TagUniversityList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TagList"
                        }
                    },
                    "201": {
                        "description": "{string} none tag exist"
                    }
                }
            }
        },
        "/tag/welfare/list": {
            "get": {
                "tags": [
                    "tag"
                ],
                "description": "Get welfare tags list.",
                "operationId": "TagController.TagWelfareList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.TagList"
                        }
                    },
                    "201": {
                        "description": "{string} none tag exist"
                    }
                }
            }
        },
        "/user/attention/list": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get user's attention list",
                "operationId": "UserController.UserAttentionList",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserAttentionCompanyList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/user/attention/{Cid}": {
            "put": {
                "tags": [
                    "user"
                ],
                "description": "User cancel pay attention to a company by id.",
                "operationId": "UserController.UserCancelAttentionToCompany",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Cid",
                        "description": "The company id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} cancel successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | company not existed | haven't attention"
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Pay attention to a company by Cid",
                "operationId": "UserController.UserPayAttentionToCompany",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Cid",
                        "description": "The company id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} pay attention successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | company not existed"
                    },
                    "405": {
                        "description": "{string} already attention"
                    }
                }
            }
        },
        "/user/attention/{Cid}/status": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Query is a user-company attention relationship existed.",
                "operationId": "UserController.UserAttentionCompanyStatus",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "path",
                        "name": "Cid",
                        "description": "The company id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{int}"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user | company not existed"
                    }
                }
            }
        },
        "/user/avatar": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Update user's avatar",
                "operationId": "UserController.UpdateAvatar",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "newAvatar",
                        "description": "The avatar image",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} newAvatarURL"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    },
                    "406": {
                        "description": "{string} avatar upload failed"
                    }
                }
            }
        },
        "/user/company/suitability/list": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get the user-company suitability list.",
                "operationId": "UserController.CompanySuitabilityList",
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetCompanySuitabilityList"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/user/editPassword": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "User edit password.",
                "operationId": "UserController.UserEditPassword",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "oldPassword",
                        "description": "The old password to change",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "newPassword",
                        "description": "The new password want to change",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetUserBaseInformation"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed || old password confirm failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/user/email/edit": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Confirm email address by code and change it",
                "operationId": "UserController.ConfirmEmailAddress",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Email",
                        "description": "The email address you want to change",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Code",
                        "description": "The confirm code sent by server",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} confirm successful"
                    },
                    "401": {
                        "description": "{string} auth | confirm failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/user/info": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get user base information",
                "operationId": "UserController.GetUserBaseInformation",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetUserBaseInformation"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Edit personal information",
                "operationId": "UserController.EditSetting",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "{object}",
                        "name": "RequestBody",
                        "description": "The request body for edit setting",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.EditSettingBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} edit successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/user/mission/info": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get user's mission information",
                "operationId": "UserController.UserMissionInformation",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "Type",
                        "description": "query mode: all, doing, finish",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserMissionInformation"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/user/platform/setting": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get user's platform setting information",
                "operationId": "UserController.PlatformInformation",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.UserPlatformSetting"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            },
            "post": {
                "tags": [
                    "user"
                ],
                "description": "New user must sign up.",
                "operationId": "UserController.EditPlatformSetting",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "RequestBody",
                        "description": "models.UserPlatformSetting",
                        "schema": {
                            "$ref": "#/definitions/object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} edit successful"
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/user/tel/edit": {
            "post": {
                "tags": [
                    "user"
                ],
                "description": "Confirm telephone number by code and change it",
                "operationId": "UserController.ConfirmTelephoneNumber",
                "parameters": [
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Tel",
                        "description": "The telephone number you want to change",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Code",
                        "description": "The confirm code sent by server",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "{string} confirm successful"
                    },
                    "401": {
                        "description": "{string} auth | confirm failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        },
        "/user/{Uid}/info": {
            "get": {
                "tags": [
                    "user"
                ],
                "description": "Get user's information by ID",
                "operationId": "UserController.GetUserInformationByID",
                "parameters": [
                    {
                        "in": "path",
                        "name": "Uid",
                        "description": "The user ID",
                        "required": true,
                        "type": "integer",
                        "format": "int64"
                    },
                    {
                        "in": "header",
                        "name": "Token",
                        "description": "The token to conform",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/models.GetUserInformation"
                        }
                    },
                    "401": {
                        "description": "{string} auth failed"
                    },
                    "402": {
                        "description": "{string} user not existed"
                    }
                }
            }
        }
    },
    "definitions": {
        "models.AuthInitTags": {
            "title": "AuthInitTags",
            "type": "object",
            "properties": {
                "tags_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TagForUserModelID"
                    }
                }
            }
        },
        "models.BaseModel": {
            "title": "BaseModel",
            "type": "object"
        },
        "models.ComapanyInformation": {
            "title": "ComapanyInformation",
            "type": "object"
        },
        "models.CompanyBaseInformation": {
            "title": "CompanyBaseInformation",
            "type": "object",
            "properties": {
                "comapany_legal_name": {
                    "type": "string"
                }
            }
        },
        "models.CompanyFeedback": {
            "title": "CompanyFeedback",
            "type": "object",
            "properties": {
                "feedback": {
                    "type": "string"
                },
                "star_level": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "models.CompanyInformation": {
            "title": "CompanyInformation",
            "type": "object",
            "properties": {
                "company_address": {
                    "type": "string"
                },
                "company_avatar": {
                    "type": "string"
                },
                "company_email": {
                    "type": "string"
                },
                "company_intro": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "company_tel": {
                    "type": "string"
                },
                "tag_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                }
            }
        },
        "models.CompanyInitTags": {
            "title": "CompanyInitTags",
            "type": "object",
            "properties": {
                "tags_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TagForCompanyModel"
                    }
                }
            }
        },
        "models.CompanyLoginError": {
            "title": "CompanyLoginError",
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.CompanyMessage": {
            "title": "CompanyMessage",
            "type": "object",
            "properties": {
                "from_avatar": {
                    "type": "string"
                },
                "from_id": {
                    "type": "string"
                },
                "from_name": {
                    "type": "string"
                },
                "is_company": {
                    "type": "boolean"
                },
                "message_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "message_text": {
                    "type": "string"
                },
                "readed": {
                    "type": "boolean"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "models.CompanyMessageList": {
            "title": "CompanyMessageList",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "message_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CompanyMessage"
                    }
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CompanySearchList": {
            "title": "CompanySearchList",
            "type": "object",
            "properties": {
                "company_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CompanySimpleInformation"
                    }
                },
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.CompanySimpleInformation": {
            "title": "CompanySimpleInformation",
            "type": "object",
            "properties": {
                "company_avatar": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "company_name": {
                    "type": "string"
                }
            }
        },
        "models.CompanySuitability": {
            "title": "CompanySuitability",
            "type": "object",
            "properties": {
                "company_avatar": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "company_name": {
                    "type": "string"
                },
                "suitability": {
                    "type": "number",
                    "format": "float"
                }
            }
        },
        "models.CompanyVerySimpleInfo": {
            "title": "CompanyVerySimpleInfo",
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "company_name": {
                    "type": "string"
                }
            }
        },
        "models.CompanyVerySimpleInfoList": {
            "title": "CompanyVerySimpleInfoList",
            "type": "object",
            "properties": {
                "company_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CompanyVerySimpleInfo"
                    }
                },
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EditSettingBody": {
            "title": "EditSettingBody",
            "type": "object",
            "properties": {
                "birth_month": {
                    "type": "integer",
                    "format": "int64"
                },
                "birth_year": {
                    "type": "integer",
                    "format": "int64"
                },
                "city": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "enroll_year": {
                    "type": "integer",
                    "format": "int64"
                },
                "intro": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                },
                "user_tags_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TagForUserModel"
                    }
                }
            }
        },
        "models.Elite": {
            "title": "Elite",
            "type": "object",
            "properties": {
                "elite_age": {
                    "type": "integer",
                    "format": "int64"
                },
                "elite_avatar": {
                    "type": "string"
                },
                "elite_edu": {
                    "type": "string"
                },
                "elite_email": {
                    "type": "string"
                },
                "elite_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "elite_name": {
                    "type": "string"
                },
                "elite_star_level": {
                    "type": "number",
                    "format": "float"
                },
                "elite_status": {
                    "type": "string"
                },
                "elite_tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                },
                "elite_tel": {
                    "type": "string"
                },
                "elite_university": {
                    "type": "string"
                },
                "is_attention": {
                    "type": "boolean"
                }
            }
        },
        "models.EliteList": {
            "title": "EliteList",
            "type": "object",
            "properties": {
                "elites_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Elite"
                    }
                },
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.EliteSimpleInformation": {
            "title": "EliteSimpleInformation",
            "type": "object",
            "properties": {
                "elite_age": {
                    "type": "integer",
                    "format": "int64"
                },
                "elite_avatar": {
                    "type": "string"
                },
                "elite_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "elite_name": {
                    "type": "string"
                }
            }
        },
        "models.ElitesList": {
            "title": "ElitesList",
            "type": "object",
            "properties": {
                "elite_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.EliteSimpleInformation"
                    }
                },
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.FeedbackMessage": {
            "title": "FeedbackMessage",
            "type": "object",
            "properties": {
                "MessageID": {
                    "type": "integer",
                    "format": "int64"
                },
                "company_avatar": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "company_name": {
                    "type": "string"
                },
                "message_text": {
                    "type": "string"
                },
                "readed": {
                    "type": "boolean"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "models.FeedbackMessageList": {
            "title": "FeedbackMessageList",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "message_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.FeedbackMessage"
                    }
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.GetCompanySuitabilityList": {
            "title": "GetCompanySuitabilityList",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "resp_body": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CompanySuitability"
                    }
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.GetUserBaseInformation": {
            "title": "GetUserBaseInformation",
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "birth_month": {
                    "type": "integer",
                    "format": "int64"
                },
                "birth_year": {
                    "type": "integer",
                    "format": "int64"
                },
                "city": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "enroll_year": {
                    "type": "integer",
                    "format": "int64"
                },
                "intro": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "sex": {
                    "type": "boolean"
                },
                "status": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                },
                "user_tags_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TagForUserModel"
                    }
                }
            }
        },
        "models.GetUserInformation": {
            "title": "GetUserInformation",
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "format": "int64"
                },
                "attention": {
                    "type": "boolean"
                },
                "avatar_url": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "edu_time_range": {
                    "type": "string"
                },
                "education": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "intro": {
                    "type": "string"
                },
                "major": {
                    "type": "string"
                },
                "missions_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MissionEntityToShow"
                    }
                },
                "name": {
                    "type": "string"
                },
                "star_level": {
                    "type": "integer",
                    "format": "int64"
                },
                "status": {
                    "type": "string"
                },
                "tel": {
                    "type": "string"
                },
                "university": {
                    "type": "string"
                },
                "user_tags_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.TagForUserModel"
                    }
                }
            }
        },
        "models.MessageEntity": {
            "title": "MessageEntity",
            "type": "object",
            "properties": {
                "from_avatar": {
                    "type": "string"
                },
                "from_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "from_name": {
                    "type": "string"
                },
                "is_platform": {
                    "type": "boolean"
                },
                "is_user": {
                    "type": "boolean"
                },
                "message_readed": {
                    "type": "boolean"
                },
                "message_text": {
                    "type": "integer",
                    "format": "int64"
                },
                "message_time": {
                    "type": "string"
                }
            }
        },
        "models.Mission": {
            "title": "Mission",
            "type": "object",
            "properties": {
                "company_avatar": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mission_name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "models.MissionEntity": {
            "title": "MissionEntity",
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "company_name": {
                    "type": "string"
                },
                "end_time": {
                    "type": "string"
                },
                "is_online": {
                    "type": "boolean"
                },
                "join_end_time": {
                    "type": "string"
                },
                "mission_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mission_name": {
                    "type": "string"
                },
                "start_time": {
                    "type": "string"
                },
                "tag_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                }
            }
        },
        "models.MissionEntityToShow": {
            "title": "MissionEntityToShow",
            "type": "object",
            "properties": {
                "mission_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "statu": {
                    "type": "boolean"
                }
            }
        },
        "models.MissionInMissionList": {
            "title": "MissionInMissionList",
            "type": "object",
            "properties": {
                "mission_end_time": {
                    "type": "string"
                },
                "mission_member_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "mission_member_limit": {
                    "type": "integer",
                    "format": "int64"
                },
                "mission_name": {
                    "type": "string"
                },
                "mission_start_time": {
                    "type": "string"
                },
                "mission_status": {
                    "type": "boolean"
                }
            }
        },
        "models.MissionInformation": {
            "title": "MissionInformation",
            "type": "object",
            "properties": {
                "mission_detail": {
                    "type": "string"
                },
                "mission_end_time": {
                    "type": "string"
                },
                "mission_file": {
                    "type": "string"
                },
                "mission_intro": {
                    "type": "string"
                },
                "mission_member": {
                    "type": "integer",
                    "format": "int64"
                },
                "mission_name": {
                    "type": "string"
                },
                "mission_online": {
                    "type": "boolean"
                },
                "mission_start_time": {
                    "type": "string"
                },
                "mission_tag_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                }
            }
        },
        "models.MissionList": {
            "title": "MissionList",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "missions_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MissionEntity"
                    }
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.MissionListEntity": {
            "title": "MissionListEntity",
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "company_logo": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "finish_mission_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "mission_list_count": {
                    "type": "integer",
                    "format": "int64"
                },
                "mission_list_create_time": {
                    "type": "string"
                },
                "mission_list_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "mission_list_name": {
                    "type": "string"
                }
            }
        },
        "models.MissionListInformation": {
            "title": "MissionListInformation",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "mission_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MissionInMissionList"
                    }
                },
                "mission_list_create_time": {
                    "type": "string"
                },
                "mission_list_intro": {
                    "type": "string"
                },
                "mission_list_name": {
                    "type": "string"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.MissionListList": {
            "title": "MissionListList",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "mission_lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.MissionListEntity"
                    }
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.MissionStatistics": {
            "title": "MissionStatistics",
            "type": "object",
            "properties": {
                "member": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.Pagination": {
            "title": "Pagination",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.PlatformMessage": {
            "title": "PlatformMessage",
            "type": "object",
            "properties": {
                "MessageID": {
                    "type": "integer",
                    "format": "int64"
                },
                "is_recommand": {
                    "type": "boolean"
                },
                "message_text": {
                    "type": "string"
                },
                "readed": {
                    "type": "boolean"
                },
                "recommand_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "recommand_type": {
                    "type": "boolean"
                },
                "time": {
                    "type": "string"
                }
            }
        },
        "models.PlatformMessageList": {
            "title": "PlatformMessageList",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "message_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PlatformMessage"
                    }
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.PositionEntity": {
            "title": "PositionEntity",
            "type": "object",
            "properties": {
                "company_avatar": {
                    "type": "string"
                },
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "company_name": {
                    "type": "string"
                },
                "position_education": {
                    "type": "string"
                },
                "position_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "position_name": {
                    "type": "string"
                },
                "position_person_number": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.PositionSimple": {
            "title": "PositionSimple",
            "type": "object",
            "properties": {
                "education": {
                    "type": "string"
                },
                "person_number": {
                    "type": "string"
                },
                "position_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "position_name": {
                    "type": "string"
                }
            }
        },
        "models.Positions": {
            "title": "Positions",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "position_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PositionEntity"
                    }
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.PositionsList": {
            "title": "PositionsList",
            "type": "object",
            "properties": {
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "position_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PositionSimple"
                    }
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ResultOfCompanyLogin": {
            "title": "ResultOfCompanyLogin",
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.ResultOfCompanySignUp": {
            "title": "ResultOfCompanySignUp",
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ResultOfReviewerLogin": {
            "title": "ResultOfReviewerLogin",
            "type": "object",
            "properties": {
                "company_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "models.ResultOfReviewerSignUp": {
            "title": "ResultOfReviewerSignUp",
            "type": "object",
            "properties": {
                "reviewer_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ResultOfUserLogin": {
            "title": "ResultOfUserLogin",
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.ReviewerLoginError": {
            "title": "ReviewerLoginError",
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.SignUpError": {
            "title": "SignUpError",
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer",
                    "format": "int64"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "models.Tag": {
            "title": "Tag",
            "type": "object",
            "properties": {
                "tag_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "tag_name": {
                    "type": "string"
                }
            }
        },
        "models.TagForCompanyModel": {
            "title": "TagForCompanyModel",
            "type": "object",
            "properties": {
                "companyid": {
                    "type": "integer",
                    "format": "int64"
                },
                "tagid": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.TagForUserModel": {
            "title": "TagForUserModel",
            "type": "object",
            "properties": {
                "tagid": {
                    "type": "integer",
                    "format": "int64"
                },
                "userid": {
                    "type": "integer",
                    "format": "int64"
                },
                "value": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.TagForUserModelID": {
            "title": "TagForUserModelID",
            "format": "int64",
            "type": "integer"
        },
        "models.TagList": {
            "title": "TagList",
            "type": "object",
            "properties": {
                "category_id": {
                    "type": "integer",
                    "format": "int64"
                },
                "category_name": {
                    "type": "string"
                },
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                },
                "tags_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                }
            }
        },
        "models.UserAttentionCompanyList": {
            "title": "UserAttentionCompanyList",
            "type": "object",
            "properties": {
                "company_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.CompanySimpleInformation"
                    }
                },
                "has_next": {
                    "type": "boolean"
                },
                "page_now": {
                    "type": "integer",
                    "format": "int64"
                },
                "page_size": {
                    "type": "integer",
                    "format": "int64"
                },
                "rows_num": {
                    "type": "integer",
                    "format": "int64"
                }
            }
        },
        "models.UserMissionInformation": {
            "title": "UserMissionInformation",
            "type": "object",
            "properties": {
                "average_star": {
                    "type": "number",
                    "format": "float"
                },
                "mission_list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Mission"
                    }
                }
            }
        },
        "models.UserPlatformSetting": {
            "title": "UserPlatformSetting",
            "type": "object"
        },
        "none": {
            "title": "none",
            "type": "object"
        },
        "object": {
            "title": "object",
            "type": "object"
        }
    },
    "tags": [
        {
            "name": "auth",
            "description": "Operations about Users\n"
        },
        {
            "name": "user",
            "description": "Operations about Users\n"
        },
        {
            "name": "company",
            "description": "Operations about Companies\n"
        },
        {
            "name": "mission",
            "description": "Operations about Missions\n"
        },
        {
            "name": "tag",
            "description": "Operations about Tags\n"
        },
        {
            "name": "elite",
            "description": "Operations about Elites\n"
        },
        {
            "name": "missionList",
            "description": "Operations about MissionLists\n"
        },
        {
            "name": "message",
            "description": "Operations about Messages\n"
        }
    ]
}